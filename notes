ADICIONANDO SUBMODULO (GIT)
    - inicia o repositorio
        git init
    - adiciona o .gitignore (C++, CMake etc...)
    - seleciona o projeto do git que deseja adicionar como SUBMODULO
        - glfw (por exemplo)
        - git submodule add https://github.com/pybind/pybind11 external/pybind11
            -- external/pybind11 eh o diretorio que sera utilizado para baixar o submodule
    - Opcional
        - criar arquivos sh para: 
            - config
            - build
            - run
            PS: ver exemplos
    
    - No arquivo CMakeLists.txt raiz, adicionar o submodule:
        add_subdirectory(external/pybind11)


    *** option ***
    - Sao parametros configuravais no momento da instalacao. Ex: o opencv... -D CUDA_DNN=ON (ou OFF)
        Ex: option(PYBIND11_NOPYTHON "Disable search for Python" OFF)


INFORMACOES FUNDAMENTAIS
    * Para adicionar um modulo ao projeto:
        add_subdirectory(external/pybind11 pybind11), sendo pybind11 um nickname que servira como referencia
        pybind11_add_module(${PROJECT_NAME} MODULE main.cpp), pybind11_add_module para adicionar o modulo aa biblioteca de conversao

    * Projeto base para criacao do repositorio:
        https://github.com/pybind/cmake_example
    
    * Repositorio da biblioteca utilizada para gerar o building do modulo em C++ para Python    
        https://pybind11.readthedocs.io/en/stable/basics.html

    * Para baixar o projeto de forma recursiva
        - git clone --recursive https://github.com/***
        - Porem, foi adicionado ao projeto o seguinte codigo para que o download das dependencias sejam automaticas:
             - message(STATUS "Loading submodules") ...

    * Para remover um submodulo:
        - git submodule deinit

    * o PYBIND11_MODULE(exemplocalc, m) (dentro do modulo) == setup( name="exemplocalc".. (arquivo de instalacao)) == project(exemplocalc) (CMakeLists.txt)
        - O nome do projeto tb deve ser diferente dos nomes dos arquivos dos modulos.



    
